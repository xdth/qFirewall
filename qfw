#! /bin/bash

# ######################### qFirewall (qfw) 0.1 ########################
#
# This is a basic /sbin/iptables firewall script.
#
# Usage:
# ./qfw {start|stop}
#
# Notes:
# 1. Comment or uncomment the firewall rules below according to your
#    needs.
# 2. For convenience, add this script to your /usr/bin or alike with
#    chmod +x permissions.
# 2. License: MIT
# 3. Author: dth at dthlabs dot com
#    Site:   https://dthlabs.com
#    github: https://github.com/xdth
#
# Brussels, Jan 23, 2018
# note: https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers
# #######################################################################


# #######################################################################
# ## Rules function -- edit this according to your needs

function qfw_rules {
  # Block everything
  /sbin/iptables -t filter -P INPUT DROP
  /sbin/iptables -t filter -P FORWARD DROP
  /sbin/iptables -t filter -P OUTPUT DROP
  echo "     > Block everything"

  # Don't break established connections
  /sbin/iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
  /sbin/iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
  echo "     > Don't break established connections"

  # Authorize loopback (127.0.0.1)
  /sbin/iptables -t filter -A INPUT -i lo -j ACCEPT
  /sbin/iptables -t filter -A OUTPUT -o lo -j ACCEPT
  echo "     > Authorize Loopback"

  # ICMP (ping)
  /sbin/iptables -t filter -A INPUT -p icmp -j ACCEPT
  /sbin/iptables -t filter -A OUTPUT -p icmp -j ACCEPT
  echo "     > Authorize ICMP (ping)"

  # SSH in/out
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 22 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 22 -j ACCEPT
  /sbin/iptables -t filter -A INPUT -p tcp --dport 40440 -j ACCEPT
  /sbin/iptables -t filter -A OUTPUT -p tcp --dport 40440 -j ACCEPT
  echo "     > Authorize SSH"

  # DNS in/out
  /sbin/iptables -t filter -A OUTPUT -p tcp --dport 53 -j ACCEPT
  /sbin/iptables -t filter -A OUTPUT -p udp --dport 53 -j ACCEPT
  /sbin/iptables -t filter -A INPUT -p tcp --dport 53 -j ACCEPT
  /sbin/iptables -t filter -A INPUT -p udp --dport 53 -j ACCEPT
  echo "     > Authorize DNS"

  # NTP Out
  /sbin/iptables -t filter -A OUTPUT -p udp --dport 123 -j ACCEPT
  echo "     > Authorize NTP outbound"

  # HTTP + HTTPS Out
  /sbin/iptables -t filter -A OUTPUT -p tcp --dport 80 -j ACCEPT
  /sbin/iptables -t filter -A OUTPUT -p tcp --dport 443 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 8000 -j ACCEPT # docker
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 9443 -j ACCEPT # docker

  # HTTP + HTTPS In
  /sbin/iptables -t filter -A INPUT -p tcp --dport 80 -j ACCEPT
  /sbin/iptables -t filter -A INPUT -p tcp --dport 443 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 8000 -j ACCEPT # docker
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 9443 -j ACCEPT # docker
  echo "     > Authorize http and https"

  # FTP Out
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 21 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 20 -j ACCEPT

  # FTP In
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 20 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 21 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
  # echo "     > Authorize FTP"

  # Mail SMTP
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 25 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 25 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 587 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 587 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 465 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 465 -j ACCEPT

  # Mail POP3:110
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 110 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 110 -j ACCEPT

  # Mail IMAP:143
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 143 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 143 -j ACCEPT

  # Mail POP3S:995
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 995 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 995 -j ACCEPT
  # echo "     > Authorize mail"

  # Allow all traffic on the docker0 interface
  /sbin/iptables -I INPUT -i docker0 -j ACCEPT
  /sbin/iptables -I FORWARD -i docker0 -j ACCEPT
  /sbin/iptables -I OUTPUT -o docker0 -j ACCEPT
  echo "     > Authorize Docker"

  # Portainer (9334)
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 9334 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 9334 -j ACCEPT
  # echo "     > Authorize Portainer"

  # Allow specific IPs to NPM Admin (port 81)
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 81 -s 10.10.10.10/32 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 81 -s 11.11.11.11/32 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 81 -j DROP
  # echo "     > Restrict NPM Admin to trusted IPs only"

  # Allow specific IPs to Portainer (direct 9334 access - optional fallback)
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 9334 -s 10.10.10.10/32 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 9334 -s 11.11.11.11/32 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 9334 -j DROP
  # echo "     > Restrict direct Portainer access to trusted IPs only"

  # Allow specific IPs to Portainer Edge Agent (if used)
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 8000 -s 10.10.10.10/32 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 8000 -s 11.11.11.11/32 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 8000 -j DROP
  # echo "     > Restrict Portainer Edge Agent to trusted IPs only"

  # Node Exporter (9100)
  /sbin/iptables -t filter -A INPUT -p tcp --dport 9100 -j ACCEPT
  /sbin/iptables -t filter -A OUTPUT -p tcp --dport 9100 -j ACCEPT
  echo "     > Authorize Node Exporter"

  # Prometheus (9090)
  /sbin/iptables -t filter -A INPUT -p tcp --dport 9090 -j ACCEPT
  /sbin/iptables -t filter -A OUTPUT -p tcp --dport 9090 -j ACCEPT
  echo "     > Authorize Prometheus"

  # Loki (3100)
  /sbin/iptables -t filter -A INPUT -p tcp --dport 3100 -j ACCEPT
  /sbin/iptables -t filter -A OUTPUT -p tcp --dport 3100 -j ACCEPT
  echo "     > Authorize Loki"

  # Promtail (9080)
  /sbin/iptables -t filter -A INPUT -p tcp --dport 9080 -j ACCEPT
  /sbin/iptables -t filter -A OUTPUT -p tcp --dport 9080 -j ACCEPT
  echo "     > Authorize Promtail"

  # Grafana (3000)
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 3000 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 3000 -j ACCEPT
  # echo "     > Authorize Grafana"

  # OpenVZ Web Pannel
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 3000 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 3000 -j ACCEPT
  # echo "     > Authorize OpenVZ panel"

  # Allow all forwarded traffic
  # /sbin/iptables -P FORWARD ACCEPT
  # /sbin/iptables -F FORWARD
  # echo "Allow all forwarded traffic ok"

  # Allow KVM/libvirt bridge interface
  /sbin/iptables -I INPUT -i virbr0 -j ACCEPT
  /sbin/iptables -I FORWARD -i virbr0 -j ACCEPT
  /sbin/iptables -I OUTPUT -o virbr0 -j ACCEPT
  echo "     > Authorize WMs"

  # Saltstack
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 4505 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 4505 -j ACCEPT
  # /sbin/iptables -t filter -A OUTPUT -p tcp --dport 4506 -j ACCEPT
  # /sbin/iptables -t filter -A INPUT -p tcp --dport 4506 -j ACCEPT
  # echo "     > Authorize Saltstack"

  # Block UDP attack
  /sbin/iptables -A INPUT -m state --state INVALID -j DROP
  echo "     > Block UDP attack"

  # Block null packages
  /sbin/iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
  echo "     > Block null packages"

  # Block SYN-flood attacks
  /sbin/iptables -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
  echo "     > Block SYN-flood attacks"

  # Block XMAS packets
  /sbin/iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
  echo "     > Block XMAS packets"

  # Rate limit new connections to prevent various DoS attacks
  /sbin/iptables -A INPUT -p tcp -m state --state NEW -m limit --limit 30/min --limit-burst 5 -j ACCEPT
  echo "     > Rate limit new connections"

  # Log and drop suspicious packets
  /sbin/iptables -A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied: " --log-level 7
  /sbin/iptables -A INPUT -j DROP
  echo "     > Log and drop suspicious packets"
}


# #######################################################################
# ## Other functions

function qfw_help {
  echo "qFirewall usage: ./qfw {start|stop}"
  exit 1
}

function qfw_seeya {
  echo "     > Thanks for using qFirewall (qfw) v1. Have a good day."
  echo ""
  echo ""
}

function qfw_separator {
  echo ""
  echo ""
  echo "===================== qFirewall (qfw) v0.1 ====================="
  echo ""
}

function qfw_reset {
  /sbin/iptables -F
  /sbin/iptables -X
  /sbin/iptables -t nat -F
  /sbin/iptables -t nat -X
  /sbin/iptables -t mangle -F
  /sbin/iptables -t mangle -X
  /sbin/iptables -P INPUT ACCEPT
  /sbin/iptables -P FORWARD ACCEPT
  /sbin/iptables -P OUTPUT ACCEPT
  /sbin/iptables -t filter -F
  /sbin/iptables -t filter -X
}

function qfw_start {
  qfw_separator
  echo "     > Starting qFirewall..."
  qfw_clean
  echo "     > Loading the rules..."
  qfw_rules
  echo "     > Rules loaded"
  echo "     > qFirewall started"
}

function qfw_clean {
  echo "     > Cleaning rules..."
  qfw_reset
  echo "     > Rules cleaned"
}

function qfw_stop {
  qfw_separator
  echo "     > Stopping qFirewall..."
  qfw_clean
  echo "     > qFirewall stopped"
}


# #######################################################################
# ## Main

case "$1" in
  start)
  qfw_start
  ;;
  stop)
  qfw_stop
  ;;
  *)
  qfw_help
  exit 1
  ;;
esac

qfw_seeya
exit 0
